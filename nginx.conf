env REDIS_PORT;
env POSTGRES_PORT;
env POSTGRES_USER;
env POSTGRES_PASSWORD;
env POSTGRES_DATABASE;
env GH_CLIENT_ID;
env GH_CLIENT_SECRET;
env GH_OAUTH_STATE;
env GH_APP_NAME;
env COSY_SECRET;

worker_processes ${{NUM_WORKERS}};
error_log stderr notice;
daemon off;
pid logs/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include mime.types;
  resolver "8.8.8.8" "4.4.4.4";

  init_worker_by_lua_block {
    local Config = require "lapis.config".get ()
    local Qless  = require "resty.qless"
    local Worker = require "resty.qless.worker"
    local worker = Worker.new (Config.redis)
    worker:start {
      interval    = 1,
      concurrency = 5,
      reserver    = "ordered",
      queues      = { "cosy" },
    }
  }
  server {
    server_name     "${{HOST}}";
    listen          "${{PORT}}";
    default_type    "application/json";
    lua_code_cache  on;

    location / {
      content_by_lua_block {
        require "resty.core"
        require "lapis".serve "cosy.github"
      }
    }

  }

}
